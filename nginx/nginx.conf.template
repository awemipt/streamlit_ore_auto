
events {
    worker_connections 1024;
}

http {

    index index.php index.html index.htm;
    client_max_body_size 100M;
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path /tmp/proxy_temp_path;
    fastcgi_temp_path /tmp/fastcgi_temp;
    uwsgi_temp_path /tmp/uwsgi_temp;
    scgi_temp_path /tmp/scgi_temp;
    client_body_timeout 120s;
    client_header_timeout 120s;
    keepalive_timeout 120s;
    send_timeout 120s;
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:10m max_size=500m inactive=60m use_temp_path=off;

    

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream streamlit {
        server $STREAMLIT_FRONTEND_ADDR;
    }


    server {
        listen 80;
        charset utf-8;

        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_pass http://streamlit;
            auth_basic off;
        }

        location /static {
            proxy_pass http://streamlit;
        }

        location /stream {
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $http_host;
            proxy_pass http://streamlit;
        }

        location /api {
            proxy_pass http://$FASTAPI_SERVER_ADDR/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_body $request_body;
        }
        location /healthz {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            add_header Content-Type text/plain;
            return 200 'OK';
        }
    }
}
