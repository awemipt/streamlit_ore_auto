services:
  fastapi:
    build: fastapi/
    ports: 
      - 8000:8000
    networks:
      - deploy_network
    container_name: fastapi
    env_file:
      - .env
    depends_on:
      db-postgres:
        condition: service_healthy
    

    extra_hosts:
      - "host.docker.internal:host-gateway"
  streamlit:
    build: streamlit/
    depends_on:
      - fastapi
    ports: 
        - 8501:8501
    networks:
      - deploy_network
    container_name: streamlit
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db-postgres:
    image: postgres
    restart: always
    container_name: postgres-db
    user: postgres
    secrets:
      - db-password
    environment:
        POSTGRES_HOST: ${POSTGRES_HOST}
        POSTGRES_PORT: ${POSTGRES_PORT}
        POSTGRES_USER: ${POSTGRES_USER}
        PGDATA: ${PGDATA}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        
    expose:
      - 5444
    ports:
      - 5444:5432 
    networks:
      - deploy_network
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5 

secrets:
  db-password:
    file: db/password.txt

volumes:
  postgres:
    external: true
    name: postgres-data

networks:
  deploy_network:
    driver: bridge